# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths:
      - '**.js'
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.js'


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      # Extracts info from version.json
      - name: Extract version from version.json
        uses: sergeysova/jq-action@v2
        id: tag
        with:
          cmd: 'jq .version version.json -r'

      - name: Extract release tag from version.json
        uses: sergeysova/jq-action@v2
        id: title
        with:
          cmd: 'jq .title version.json -r'

      - name: Extract release description from version.json
        uses: sergeysova/jq-action@v2
        id: description
        with:
          cmd: 'jq .description version.json -r'
          multiline: true

      # Create release
      - name: Create a release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.value }}
          release_name: ${{ steps.tag.outputs.value }} - ${{ steps.title.outputs.value }}
          body: ${{ steps.description.outputs.value }}
          draft: false
          prerelease: false

      # Create files to release
      - name: Create Scriptable files from src folder
        id: create_files
        run: |
          # Run bash file in .github/scripts/create_files.sh
          chmod +x "${GITHUB_WORKSPACE}/.github/scripts/create_files.sh"
          "${GITHUB_WORKSPACE}/.github/scripts/create_files.sh"
          
          # Echo the files that were created
          echo "Files created:"
          ls -la "${GITHUB_WORKSPACE}/release-scriptable"
          
          # Set output path to release folder
          echo ::set-output name=output_path::"${GITHUB_WORKSPACE}/release-scriptable/*"

      # Upload assets
      - name: Upload assets
        uses: AButler/upload-release-assets@v2.0
        with:
          files: ${{ steps.create_files.outputs.output_path }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ steps.tag.outputs.value }}

      # Create widget.js file
      - name: Create widget.js file
        id: create_widget
        run: |
          # Run bash file in .github/scripts/create_js_widget_file.sh
          chmod +x "${GITHUB_WORKSPACE}/.github/scripts/create_js_widget_file.sh"
          "${GITHUB_WORKSPACE}/.github/scripts/create_js_widget_file.sh"
          
          echo "JS widget file created"
          
          # Set output path to release folder
          echo ::set-output name=output_path::"${GITHUB_WORKSPACE}/widget.js"

      # Commit & push widget.js file
      - name: Commit & push widget.js file
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automated widget.js file update
          file_pattern: ${{ steps.create_widget.outputs.output_path }}
